#-- update_title_bar
# This is primarily intended for Linux systems, but will likely work for any modern BaSH version.
#
# Author: Jeremy Melanson
#
# Source-code, documentation and revision Git repository: https://github.com/zish/bashrc_enhancements
#
# Last-Modified: 2016-09-08
#
# $ git clone https://github.com/zish/bashrc_enhancements
#
# To use this, source the file from your .bashrc (or .bash_profile).
#
#
# This file is part of bashrc_enhancements.
#
#    bashrc_enhancements is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    bashrc_enhancements is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with bashrc_enhancements.  If not, see <http://www.gnu.org/licenses/>.
#

update_title_bar () {

  #--- If the first arg is "init", Initialize the PROMPT_COMMAND.
  if [[ "${1}" == "init" ]]; then

    #--- Set some text replacment defaults.
    if [[ -z "${UTB_TEXT_REPLACE[*]}" ]]; then
      UTB_TEXT_REPLACE=("${HOME}" '~')
    fi

    #-- Add to PROMPT_COMMAND and DEBUG trap, if it looks like we
    # don't already exists in PROMPT_COMMAND.
    #
    if ! [[ "${PROMPT_COMMAND}" =~ update_title_bar ]]; then
      if [[ "${PROMPT_COMMAND}" != "" ]]; then PROMPT_COMMAND+=";"; fi
      PROMPT_COMMAND+='update_title_bar ${SHELL}'
    fi

    trap "update_title_bar \${BASH_COMMAND}" DEBUG
    return 0
  fi

  local BCMD="${BASH_COMMAND}"

  #--- Entering an arg to this function overrides the output of the command name.
  if [[ "${1}" != "" ]]; then BCMD="${1}"; fi

  local CMDRGX="${BCMD//\\/\\\\}"
  CMDRGX="${CMDRGX//\//\\\/}"
  CMDRGX="${CMDRGX//\$/\\\$}"
  CMDRGX="${CMDRGX//\{/\\\{}"
  CMDRGX="${CMDRGX//\}/\\\}}"

  #--- Skip any commands that exist in PROMPT_COMMAND
  if [[ ! "${PROMPT_COMMAND}" =~ ${CMDRGX} ]]; then

    #--- Make sure BCMD isn't trying to set the terminal title.
    # Skip output if it is.
    #
    if [[ ! "${BCMD}" =~ \\e\]0\; ]]; then
      local OUT=

      #--- Make the title more noticable, if running with root privileges.
      if [[ ${EUID} == 0 ]]; then   OUT="(ROOT_USER) "
      else                          OUT="${USER}@";fi

      OUT+="${HOSTNAME}:${PWD} [${BCMD}]"

      #-- Run text replace on the prompt output.
      for ((E=0; E<${#UTB_TEXT_REPLACE[@]}; E+=2)); do
        local RGX="${UTB_TEXT_REPLACE[$E]}"

        if [[ "${OUT}" =~ ${RGX} ]]; then
          OUT="${OUT//${RGX}/${UTB_TEXT_REPLACE[$((${E}+1))]}}"
        fi

      done

      echo -ne "\e]0;${OUT}\007"

    fi
  fi
}

#--- Some stuff needs to be initialized, for things to work correctly.
# We can skip init, if it is desirable to init it manually.
#
if [[ "${UTB_MANUAL_INIT}" != 1 ]]; then
  update_title_bar init
fi

# vim: ft=sh
